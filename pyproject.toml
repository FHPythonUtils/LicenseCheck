[tool.poetry]
name = "licensecheck"
version = "2024"
license = "mit"
description = "Output the licenses used by dependencies and check if these are compatible with the project license"
authors = ["FredHappyface"]
classifiers = [
	"Environment :: Console",
	"Environment :: MacOS X",
	"Environment :: Win32 (MS Windows)",
	"Development Status :: 5 - Production/Stable",
	"Intended Audience :: Developers",
	"Intended Audience :: Education",
	"Natural Language :: English",
	"Operating System :: OS Independent",
	"Programming Language :: Python :: Implementation :: CPython",
	"Topic :: Security",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Utilities"
]
homepage = "https://github.com/FHPythonUtils/LicenseCheck"
repository = "https://github.com/FHPythonUtils/LicenseCheck"
documentation = "https://github.com/FHPythonUtils/LicenseCheck/blob/master/README.md"
readme = "README.md"

[tool.poetry.scripts]
licensecheck = 'licensecheck:cli'

[tool.poetry.dependencies]
python = "^3.8"
requests = "<3,>=2.31.0"
fhconfparser = "<2025,>=2023"
tomli = "<3,>=2.0.1"
rich = "<14,>=13.7.0"
requests-cache = "<2,>=1.1.1"
packaging = "<24,>=23.2"
loguru = "<2,>=0.7.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
handsdown = "^2.1.0"
coverage = "^7.4.0"
ruff = "^0.1.13"
blackt = "^2024.0.1"
pyright = "^1.1.347"
pytest-loguru = "^0.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101",  # type annotation for self in method
    "COM812",  # enforce trailing comma
	"D2",  # pydocstyle formatting
    "N",  # pep8 naming
    "PLR09",  # pylint refactor too many
    "TCH",  # type check blocks
    "W191"  # ignore this to allow tabs
]
fixable = ["ALL"]


[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = ["D", "S101", "E402"]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.pyright]
venvPath = "."
venv = ".venv"


[tool.licensecheck]
# using = "requirements:requirements.txt;requirements_optional.txt"
# format = "json"

[tool.tox]
legacy_tox_ini = """
[tox]
env_list =
	py311
	py310
	py39
	py38

[testenv]
deps = pytest
commands = pytest tests
"""
